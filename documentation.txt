Pauli_basis
    vector_to_Pauli(rho(Qobj)): Qobj
    vector_from_Pauli(rhoP(Qobj)): Qobj
    prepare_from_rhoP_to_rho_square(n): T_matrix(Qobj), mask_to_sq_rho(ndarray)
    from_rhoP_to_rho_square(rhoP(Qojb), mask_to_sq_rho(ndarray)):: Qobj
    to_Pauli_T_matrix(O(ndarray)): ndarray

gates
    class QCircuit (n - num of qubits):
        make_gate(self, T(single gate), cur, cur1 = -1): Qobj: trasfer matrix (4^n x 4^n)

    1q gates:
        Wait(t, T1, Tf): Qobj
        Ry_gate(theta): Qobj
        NOT_gate(): Qobj
        Hadamard_gate(): Qobj
        S_gate(): Qobj
        Z_gate(): Qobj
    2q gates:
        CZ_gate(): Qobj
        iSQAP_gate(): Qobj

measure
    Proj0_gate(n, cur, p): Qobj
    Proj1_gate(n, cur, p): Qobj
    Projplus_gate(n, cur, p): Qobj
    Projminus_gate(n, cur, p): Qobj
    measure_last_qubit(rhoP, etaRO = 0): rhoP (Qobj), m (-1 or +1)
    measure_all_data_qubits(rhoP, etaRO = 0): M_data (ndarray)